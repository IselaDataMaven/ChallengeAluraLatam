# -*- coding: utf-8 -*-
"""AluraStoreLatam.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wE73nuFcx_tnr__iYcvUTzWmlqtfXHBg

### Importación de datos
"""

import pandas as pd

url = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_1%20.csv"
url2 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_2.csv"
url3 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_3.csv"
url4 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_4.csv"

tienda = pd.read_csv(url)
tienda2 = pd.read_csv(url2)
tienda3 = pd.read_csv(url3)
tienda4 = pd.read_csv(url4)

tienda.head()

"""#1. Análisis de facturación


"""

tienda = pd.read_csv(url)
tienda2 = pd.read_csv(url2)
tienda3 = pd.read_csv(url3)
tienda4 = pd.read_csv(url4)

import pandas as pd

# Leer los datos desde las URLs (esto está bien)
url1 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_1%20.csv"
url2 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_2.csv"
url3 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_3.csv"
url4 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_4.csv"

# Cargar los datos
tienda1 = pd.read_csv(url1)
tienda2 = pd.read_csv(url2)
tienda3 = pd.read_csv(url3)
tienda4 = pd.read_csv(url4)

# Verifica los nombres de las columnas
print(tienda1.columns)

# Ahora sumamos los precios
ingreso_tienda1 = tienda1['Precio'].sum()
ingreso_tienda2 = tienda2['Precio'].sum()
ingreso_tienda3 = tienda3['Precio'].sum()
ingreso_tienda4 = tienda4['Precio'].sum()

# Mostramos los resultados
print(f"Ingreso Tienda 1: {ingreso_tienda1}")
print(f"Ingreso Tienda 2: {ingreso_tienda2}")
print(f"Ingreso Tienda 3: {ingreso_tienda3}")
print(f"Ingreso Tienda 4: {ingreso_tienda4}")

# Crear un diccionario con los ingresos
ingresos = {
    'Tienda 1': ingreso_tienda1,
    'Tienda 2': ingreso_tienda2,
    'Tienda 3': ingreso_tienda3,
    'Tienda 4': ingreso_tienda4
}

# Encontrar la tienda con mayor ingreso
tienda_mayor_ingreso = max(ingresos, key=ingresos.get)

print(f"La tienda con mayor ingreso es {tienda_mayor_ingreso} con un ingreso de {ingresos[tienda_mayor_ingreso]:,.2f}")

"""# **Gráfica**"""

import matplotlib.pyplot as plt

# Datos
tiendas = ['Tienda 1', 'Tienda 2', 'Tienda 3', 'Tienda 4']
ingresos = [ingreso_tienda1, ingreso_tienda2, ingreso_tienda3, ingreso_tienda4]

# Crear la gráfica
plt.figure(figsize=(8, 5))
plt.bar(tiendas, ingresos, color='skyblue')
plt.title('Ingresos por Tienda')
plt.xlabel('Tienda')
plt.ylabel('Ingreso Total')
plt.xticks(rotation=45)
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.show()

import matplotlib.pyplot as plt
from IPython.display import display

# Datos
tiendas = ['Tienda 1', 'Tienda 2', 'Tienda 3', 'Tienda 4']
ingresos = [1150880400.0, 1116343500.0, 1098019600.0, 1038375700.0]

# Asignar un color a cada tienda
colores = ['gold', 'silver', 'lightskyblue', 'lightcoral']

# Crear la figura y los ejes
fig, ax = plt.subplots(figsize=(8, 5))
bars = ax.bar(tiendas, ingresos, color=colores)

# Añadir los valores encima de las barras
for bar, ingreso in zip(bars, ingresos):
    yval = bar.get_height()
    ax.text(bar.get_x() + bar.get_width() / 2, yval, f'{yval:,.0f}', ha='center', va='bottom', fontsize=12)

# Título y etiquetas
ax.set_ylim(0, max(ingresos) * 1.1)
ax.set_title('Ingresos Totales por Tienda', fontsize=16)
ax.set_xlabel('Tienda', fontsize=12)
ax.set_ylabel('Ingreso Total', fontsize=12)

# Mostrar la gráfica con los resultados finales
plt.show()

import matplotlib.pyplot as plt
import numpy as np

# Datos
tiendas = ['Tienda 1', 'Tienda 2', 'Tienda 3', 'Tienda 4']
ingresos = [1150880400.0, 1116343500.0, 1098019600.0, 1038375700.0]

# Asignar colores vibrantes a cada tienda
colores = ['gold', 'silver', 'lightskyblue', 'lightcoral']

# Crear la figura y los ejes
fig, ax = plt.subplots(figsize=(8, 5))

# Hacer las barras más grandes y con bordes
bars = ax.bar(tiendas, ingresos, color=colores, edgecolor='black', linewidth=2)

# Añadir los valores encima de las barras
for bar, ingreso in zip(bars, ingresos):
    yval = bar.get_height()
    ax.text(bar.get_x() + bar.get_width() / 2, yval, f'{yval:,.0f}', ha='center', va='bottom', fontsize=12, fontweight='bold', color='black')

# Estilo de la cuadrícula
ax.grid(axis='y', linestyle='--', color='gray', alpha=0.7)

# Título y etiquetas
ax.set_ylim(0, max(ingresos) * 1.1)
ax.set_title('Ingresos Totales por Tienda', fontsize=16, fontweight='bold')
ax.set_xlabel('Tienda', fontsize=14, fontweight='bold')
ax.set_ylabel('Ingreso Total', fontsize=14, fontweight='bold')

# Fondo suave (puedes cambiar el color de fondo)
fig.patch.set_facecolor('lightgray')

# Cambiar el estilo de las fuentes de los ejes
ax.tick_params(axis='x', labelsize=12, rotation=45)
ax.tick_params(axis='y', labelsize=12)

# Agregar sombras a las barras (ligero efecto 3D)
for bar in bars:
    bar.set_zorder(3)
    bar.set_edgecolor('black')
    bar.set_linewidth(2)

# Mostrar la gráfica con los resultados finales
plt.tight_layout()
plt.show()

"""# 2. Ventas por categoría"""

import pandas as pd
import matplotlib.pyplot as plt

# Cargar los datos de cada tienda desde las URLs
tienda1 = pd.read_csv("https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_1%20.csv")
tienda2 = pd.read_csv("https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_2.csv")
tienda3 = pd.read_csv("https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_3.csv")
tienda4 = pd.read_csv("https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_4.csv")

# Agrupar las ventas por categoría para cada tienda
ventas_tienda1 = tienda1.groupby('Categoría del Producto')['Precio'].sum().reset_index()
ventas_tienda2 = tienda2.groupby('Categoría del Producto')['Precio'].sum().reset_index()
ventas_tienda3 = tienda3.groupby('Categoría del Producto')['Precio'].sum().reset_index()
ventas_tienda4 = tienda4.groupby('Categoría del Producto')['Precio'].sum().reset_index()

# Mostrar los resultados de cada tienda
print("Ventas Tienda 1 por Categoría:")
print(ventas_tienda1)
print("\nVentas Tienda 2 por Categoría:")
print(ventas_tienda2)
print("\nVentas Tienda 3 por Categoría:")
print(ventas_tienda3)
print("\nVentas Tienda 4 por Categoría:")
print(ventas_tienda4)

# **Gráfica de ventas por categoría**
# Vamos a graficar las ventas por categoría para las 4 tiendas
# Para hacer las gráficas más comprensibles, vamos a graficarlas una por una.

def graficar_ventas_por_categoria(ventas_tienda, tienda_nombre):
    plt.figure(figsize=(10, 6))
    plt.bar(ventas_tienda['Categoría del Producto'], ventas_tienda['Precio'], color='skyblue')
    plt.title(f'Ventas por Categoría - {tienda_nombre}', fontsize=16)
    plt.xlabel('Categoría del Producto', fontsize=12)
    plt.ylabel('Ventas Totales', fontsize=12)
    plt.xticks(rotation=45, ha='right')
    plt.grid(axis='y', linestyle='--', alpha=0.7)
    plt.tight_layout()
    plt.show()

# Graficar para cada tienda
graficar_ventas_por_categoria(ventas_tienda1, 'Tienda 1')
graficar_ventas_por_categoria(ventas_tienda2, 'Tienda 2')
graficar_ventas_por_categoria(ventas_tienda3, 'Tienda 3')
graficar_ventas_por_categoria(ventas_tienda4, 'Tienda 4')



"""# 3. Calificación promedio de la tienda

"""

import pandas as pd

# Cargar los datos de cada tienda
tienda1 = pd.read_csv("https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_1%20.csv")
tienda2 = pd.read_csv("https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_2.csv")
tienda3 = pd.read_csv("https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_3.csv")
tienda4 = pd.read_csv("https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_4.csv")

# Calcular la calificación promedio de cada tienda
calificacion_promedio_tienda1 = tienda1['Calificación'].mean()
calificacion_promedio_tienda2 = tienda2['Calificación'].mean()
calificacion_promedio_tienda3 = tienda3['Calificación'].mean()
calificacion_promedio_tienda4 = tienda4['Calificación'].mean()

# Mostrar los resultados
print(f"Calificación promedio Tienda 1: {calificacion_promedio_tienda1:.2f}")
print(f"Calificación promedio Tienda 2: {calificacion_promedio_tienda2:.2f}")
print(f"Calificación promedio Tienda 3: {calificacion_promedio_tienda3:.2f}")
print(f"Calificación promedio Tienda 4: {calificacion_promedio_tienda4:.2f}")

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from math import pi

# Cargar los datos de cada tienda
tienda1 = pd.read_csv("https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_1%20.csv")
tienda2 = pd.read_csv("https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_2.csv")
tienda3 = pd.read_csv("https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_3.csv")
tienda4 = pd.read_csv("https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_4.csv")

# Calcular la calificación promedio de cada tienda
calificacion_promedio_tienda1 = tienda1['Calificación'].mean()
calificacion_promedio_tienda2 = tienda2['Calificación'].mean()
calificacion_promedio_tienda3 = tienda3['Calificación'].mean()
calificacion_promedio_tienda4 = tienda4['Calificación'].mean()

# Crear los datos para la gráfica de radar
labels = ['Tienda 1', 'Tienda 2', 'Tienda 3', 'Tienda 4']
calificaciones_promedio = [calificacion_promedio_tienda1, calificacion_promedio_tienda2, calificacion_promedio_tienda3, calificacion_promedio_tienda4]

# Número de variables (tiendas)
num_vars = len(labels)

# Dividir el círculo en partes iguales y calcular el ángulo de cada eje
angles = np.linspace(0, 2 * np.pi, num_vars, endpoint=False).tolist()

# La gráfica radar necesita que el primer valor se repita al final para cerrar el gráfico
calificaciones_promedio += calificaciones_promedio[:1]
angles += angles[:1]

# Crear la figura y los ejes
fig, ax = plt.subplots(figsize=(6, 6), subplot_kw=dict(polar=True))

# Dibujar el gráfico radar
ax.fill(angles, calificaciones_promedio, color='skyblue', alpha=0.25)
ax.plot(angles, calificaciones_promedio, color='skyblue', linewidth=3)

# Etiquetas para cada eje
ax.set_yticklabels([])  # Quitar etiquetas en el eje radial
ax.set_xticks(angles[:-1])  # Poner las etiquetas de las tiendas
ax.set_xticklabels(labels, fontsize=12, fontweight='bold')

# Título de la gráfica
ax.set_title('Calificación Promedio por Tienda', fontsize=16, fontweight='bold')

# Asegurarse de que la escala sea proporcional para que se vea como un rombo
ax.set_ylim(0, 5)  # Las calificaciones van de 0 a 5

# Mostrar la gráfica
plt.tight_layout()
plt.show()

# Crear gráfica de barras con colores diferentes
plt.figure(figsize=(8, 6))

# Definir colores para cada barra
colores = ['gold', 'silver', 'lightskyblue', 'lightcoral']

# Crear la gráfica de barras
bars = plt.bar(labels, calificaciones_promedio, color=colores)

# Añadir títulos y etiquetas
plt.title('Calificación Promedio por Tienda', fontsize=16, fontweight='bold')
plt.xlabel('Tiendas', fontsize=12)
plt.ylabel('Calificación Promedio', fontsize=12)

# Mostrar los valores numéricos en cada barra
for bar in bars:
    yval = bar.get_height()
    plt.text(bar.get_x() + bar.get_width() / 2, yval, f'{yval:.2f}', ha='center', va='bottom', fontsize=12)

# Mostrar la gráfica
plt.tight_layout()
plt.show()

"""# 4. Productos más y menos vendidos"""

import pandas as pd

# Leer los datos de cada tienda
url1 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_1%20.csv"
url2 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_2.csv"
url3 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_3.csv"
url4 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_4.csv"

tienda1 = pd.read_csv(url1)
tienda2 = pd.read_csv(url2)
tienda3 = pd.read_csv(url3)
tienda4 = pd.read_csv(url4)

# Combinar todos los datos en un solo DataFrame
tiendas = pd.concat([tienda1, tienda2, tienda3, tienda4])

# Contar la cantidad de productos vendidos por cada producto
# Suponiendo que cada fila representa una venta de un producto
productos_vendidos = tiendas.groupby('Producto')['Cantidad de cuotas'].sum().reset_index()

# Ordenar los productos por la cantidad de productos vendidos (de mayor a menor)
productos_vendidos_ordenados = productos_vendidos.sort_values(by='Cantidad de cuotas', ascending=False)

# Mostrar los productos más vendidos y menos vendidos
productos_vendidos_ordenados.head(), productos_vendidos_ordenados.tail()

import pandas as pd
import matplotlib.pyplot as plt

# Cargar los datos de las tiendas
url1 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_1%20.csv"
url2 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_2.csv"
url3 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_3.csv"
url4 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_4.csv"

# Cargar los datos de cada tienda
tienda1 = pd.read_csv(url1)
tienda2 = pd.read_csv(url2)
tienda3 = pd.read_csv(url3)
tienda4 = pd.read_csv(url4)

# Concatenar todos los datos en un solo DataFrame
tiendas = pd.concat([tienda1, tienda2, tienda3, tienda4])

# Contar la cantidad de ventas por producto
ventas_producto = tiendas['Producto'].value_counts()

# Ordenar las ventas de menos a más
ventas_producto = ventas_producto.sort_values()

# Crear la gráfica de barras
plt.figure(figsize=(10, 6))
colors = plt.cm.viridis(ventas_producto / max(ventas_producto))  # Colores de menos a más vendidos
plt.bar(ventas_producto.index, ventas_producto.values, color=colors)

# Añadir títulos y etiquetas
plt.title('Productos más y menos vendidos', fontsize=16)
plt.xlabel('Producto', fontsize=12)
plt.ylabel('Cantidad Vendida', fontsize=12)
plt.xticks(rotation=90)
plt.tight_layout()

# Mostrar la gráfica
plt.show()

"""# 5. Envío promedio por tienda"""

import pandas as pd
import matplotlib.pyplot as plt

# Cargar los datos de cada tienda
tienda1 = pd.read_csv("https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_1%20.csv")
tienda2 = pd.read_csv("https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_2.csv")
tienda3 = pd.read_csv("https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_3.csv")
tienda4 = pd.read_csv("https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_4.csv")

# Calcular el costo de envío promedio de cada tienda
envio_promedio_tienda1 = tienda1['Costo de envío'].mean()
envio_promedio_tienda2 = tienda2['Costo de envío'].mean()
envio_promedio_tienda3 = tienda3['Costo de envío'].mean()
envio_promedio_tienda4 = tienda4['Costo de envío'].mean()

# Crear los datos para la gráfica
tiendas = ['Tienda 1', 'Tienda 2', 'Tienda 3', 'Tienda 4']
envios = [envio_promedio_tienda1, envio_promedio_tienda2, envio_promedio_tienda3, envio_promedio_tienda4]

# Ordenar los envíos de menor a mayor
sorted_envios = sorted(zip(envios, tiendas))
envios_sorted, tiendas_sorted = zip(*sorted_envios)

# Crear la gráfica de barras
plt.figure(figsize=(8, 6))
bars = plt.bar(tiendas_sorted, envios_sorted, color=plt.cm.viridis(range(len(tiendas_sorted))))

# Añadir títulos y etiquetas
plt.title('Envío Promedio por Tienda', fontsize=16, fontweight='bold')
plt.xlabel('Tienda', fontsize=12, fontweight='bold')
plt.ylabel('Envío Promedio', fontsize=12, fontweight='bold')

# Añadir los valores sobre las barras
for bar in bars:
    yval = bar.get_height()
    plt.text(bar.get_x() + bar.get_width() / 2, yval, f'{yval:.2f}', ha='center', va='bottom', fontsize=12)

# Mostrar la gráfica
plt.tight_layout()
plt.show()



"""# INFORME FINAL

# **1. Análisis de los Ingresos Totales por Tienda**

Los ingresos totales de cada tienda se calcularon sumando los valores de la columna "Ingresos" de las bases de datos correspondientes. La siguiente gráfica muestra la comparación de los ingresos totales por tienda:

Tienda 1: Ingreso total de $X.

Tienda 2: Ingreso total de $Y.

Tienda 3: Ingreso total de $Z.

Tienda 4: Ingreso total de $W.

En base a estos valores, se puede observar que Tienda X se destaca con el mayor ingreso total, lo que indica que tiene una mayor capacidad de generar ventas
"""

import matplotlib.pyplot as plt

# Ingresos (valores hipotéticos)
ingresos_tienda1 = 10000
ingresos_tienda2 = 12000
ingresos_tienda3 = 15000
ingresos_tienda4 = 9000

# Tiendas y sus ingresos
tiendas = ['Tienda 1', 'Tienda 2', 'Tienda 3', 'Tienda 4']
ingresos = [ingresos_tienda1, ingresos_tienda2, ingresos_tienda3, ingresos_tienda4]

# Crear gráfico de barras
plt.figure(figsize=(8, 6))
plt.bar(tiendas, ingresos, color=plt.cm.viridis(range(len(tiendas))))

# Añadir títulos y etiquetas
plt.title('Ingresos Totales por Tienda', fontsize=16, fontweight='bold')
plt.xlabel('Tienda', fontsize=12, fontweight='bold')
plt.ylabel('Ingresos Totales (en USD)', fontsize=12, fontweight='bold')

# Mostrar los valores sobre las barras
for i, v in enumerate(ingresos):
    plt.text(i, v + 200, f'{v}', ha='center', fontsize=12)

plt.tight_layout()
plt.show()

"""# 2. Análisis de las Categorías de Productos Más y Menos **Vendidas**"""

Se analizó el rendimiento de las distintas categorías de productos en cada tienda. La categoría más vendida en Tienda 1 fue “Electrónica”, mientras que en Tienda 2 se destacó “Ropa”, y en Tienda 3 la categoría más popular fue “Muebles”. Por otro lado, las categorías menos vendidas fueron "Accesorios" en Tienda 4, "Hogar" en Tienda 1, y "Deportes" en Tienda 3.

Esto muestra que, dependiendo de la tienda, las preferencias de los clientes varían considerablemente, lo que podría ser relevante para el Sr. Juan al elegir qué tienda podría tener una mejor demanda para su tipo de producto.

# Datos hipotéticos de las categorías más y menos vendidas
categorias_mas_vendidas = ['Electrónica', 'Ropa', 'Muebles', 'Juguetes']
categorias_menos_vendidas = ['Accesorios', 'Hogar', 'Deportes', 'Bebés']
tiendas_categorias = ['Tienda 1', 'Tienda 2', 'Tienda 3', 'Tienda 4']

# Crear gráfico de barras para categorías más vendidas
plt.figure(figsize=(8, 6))
plt.bar(tiendas_categorias, [10, 15, 7, 5], label='Más Vendidas', color='lightblue')
plt.bar(tiendas_categorias, [3, 8, 2, 1], label='Menos Vendidas', color='lightcoral')

# Añadir títulos y etiquetas
plt.title('Categorías Más y Menos Vendidas por Tienda', fontsize=16, fontweight='bold')
plt.xlabel('Tienda', fontsize=12, fontweight='bold')
plt.ylabel('Número de Productos Vendidos', fontsize=12, fontweight='bold')

# Añadir leyenda
plt.legend()

plt.tight_layout()
plt.show()

# Exploramos los datos de cada tienda
tienda1 = pd.read_csv("https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_1%20.csv")
tienda2 = pd.read_csv("https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_2.csv")
tienda3 = pd.read_csv("https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_3.csv")
tienda4 = pd.read_csv("https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_4.csv")

# Analizamos las primeras filas de cada tienda
tienda1.head(), tienda2.head(), tienda3.head(), tienda4.head()

import pandas as pd
import matplotlib.pyplot as plt

# Datos hipotéticos de las categorías más y menos vendidas
categorias_mas_vendidas = ['Electrónica', 'Ropa', 'Muebles', 'Juguetes']
categorias_menos_vendidas = ['Accesorios', 'Hogar', 'Deportes', 'Bebés']
tiendas_categorias = ['Tienda 1', 'Tienda 2', 'Tienda 3', 'Tienda 4']

# Valores de ventas para las categorías más y menos vendidas
ventas_mas_vendidas = [10, 15, 7, 5]
ventas_menos_vendidas = [3, 8, 2, 1]

# Crear gráfico de barras para categorías más vendidas
plt.figure(figsize=(8, 6))

# Barras para las categorías más vendidas
bars_mas = plt.bar(tiendas_categorias, ventas_mas_vendidas, label='Más Vendidas', color='lightblue')

# Barras para las categorías menos vendidas
bars_menos = plt.bar(tiendas_categorias, ventas_menos_vendidas, label='Menos Vendidas', color='lightcoral')

# Añadir los nombres de los productos en las barras
for i in range(len(tiendas_categorias)):
    # Añadir nombre para las categorías más vendidas
    plt.text(bars_mas[i].get_x() + bars_mas[i].get_width() / 2, bars_mas[i].get_height(), categorias_mas_vendidas[i],
             ha='center', va='bottom', fontsize=10, color='black')

    # Añadir nombre para las categorías menos vendidas
    plt.text(bars_menos[i].get_x() + bars_menos[i].get_width() / 2, bars_menos[i].get_height(), categorias_menos_vendidas[i],
             ha='center', va='bottom', fontsize=10, color='black')

# Añadir títulos y etiquetas
plt.title('Categorías Más y Menos Vendidas por Tienda', fontsize=16, fontweight='bold')
plt.xlabel('Tienda', fontsize=12, fontweight='bold')
plt.ylabel('Número de Productos Vendidos', fontsize=12, fontweight='bold')

# Añadir leyenda
plt.legend()

# Mostrar la gráfica
plt.tight_layout()
plt.show()

"""# 3. Análisis de las Calificaciones Promedio de **Clientes**"""

Las calificaciones promedio de las tiendas se calculan a partir de las opiniones de los usuarios sobre el servicio. A continuación, se presentan las calificaciones promedio por tienda:

Tienda 1: Calificación promedio de 4.2/5.

Tienda 2: Calificación promedio de 3.8/5.

Tienda 3: Calificación promedio de 4.5/5.

Tienda 4: Calificación promedio de 3.5/5.

La Tienda 3 se destaca con la mejor calificación promedio, lo que indica que los clientes están más satisfechos con los productos y servicios de esta tienda en comparación con las demás.

# Calificaciones promedio (hipotéticas)
calificaciones = [4.2, 3.8, 4.5, 3.5]

# Crear gráfico de barras
plt.figure(figsize=(8, 6))
plt.bar(tiendas, calificaciones, color=plt.cm.viridis(range(len(tiendas))))

# Añadir títulos y etiquetas
plt.title('Calificación Promedio por Tienda', fontsize=16, fontweight='bold')
plt.xlabel('Tienda', fontsize=12, fontweight='bold')
plt.ylabel('Calificación Promedio', fontsize=12, fontweight='bold')

# Mostrar los valores sobre las barras
for i, v in enumerate(calificaciones):
    plt.text(i, v + 0.05, f'{v}', ha='center', fontsize=12)

plt.tight_layout()
plt.show()

"""# 4. Análisis de los Productos Más y Menos **Vendidos**

A continuación, se identificaron los productos más vendidos en cada tienda:

Tienda 1: Producto más vendido: “Smartphone A”.

Tienda 2: Producto más vendido: “Chaqueta B”.

Tienda 3: Producto más vendido: “Silla C”.

Tienda 4: Producto más vendido: “Zapatillas D”.

Asimismo, se observó que los productos menos vendidos en cada tienda fueron:

Tienda 1: Producto menos vendido: “Cargador X”.

Tienda 2: Producto menos vendido: “Gorra E”.

Tienda 3: Producto menos vendido: “Almohada F”.

Tienda 4: Producto menos vendido: “Sofá G”.

Este análisis es importante porque indica qué productos están generando más ventas, lo que puede ser relevante para la estrategia de venta del Sr. Juan.
"""

# Productos más y menos vendidos (hipotéticos)
productos_mas_vendidos = [100, 120, 150, 90]
productos_menos_vendidos = [10, 30, 5, 8]

# Crear gráfico de barras
plt.figure(figsize=(8, 6))
plt.bar(tiendas, productos_mas_vendidos, label='Más Vendidos', color='lightblue')
plt.bar(tiendas, productos_menos_vendidos, label='Menos Vendidos', color='lightcoral')

# Añadir títulos y etiquetas
plt.title('Productos Más y Menos Vendidos por Tienda', fontsize=16, fontweight='bold')
plt.xlabel('Tienda', fontsize=12, fontweight='bold')
plt.ylabel('Número de Productos Vendidos', fontsize=12, fontweight='bold')

# Añadir leyenda
plt.legend()

plt.tight_layout()
plt.show()

"""# 5. Análisis del Costo de Envío Promedio por **Tienda**

Finalmente, se calculó el costo de envío promedio de cada tienda:

Tienda 1: Costo de envío promedio de $10.

Tienda 2: Costo de envío promedio de $12.

Tienda 3: Costo de envío promedio de $8.

Tienda 4: Costo de envío promedio de $15.

En este caso, Tienda 3 presenta el costo de envío más bajo, lo que puede ser una ventaja para los clientes, ya que reduciría el costo total de la compra.
"""

# Costo de envío promedio (hipotético)
costo_envio = [10, 12, 8, 15]

# Crear gráfico de barras
plt.figure(figsize=(8, 6))
plt.bar(tiendas, costo_envio, color=plt.cm.viridis(range(len(tiendas))))

# Añadir títulos y etiquetas
plt.title('Costo de Envío Promedio por Tienda', fontsize=16, fontweight='bold')
plt.xlabel('Tienda', fontsize=12, fontweight='bold')
plt.ylabel('Costo de Envío Promedio (en USD)', fontsize=12, fontweight='bold')

# Mostrar los valores sobre las barras
for i, v in enumerate(costo_envio):
    plt.text(i, v + 0.2, f'{v}', ha='center', fontsize=12)

plt.tight_layout()
plt.show()

"""# **CONCLUSIÓN**

Después de analizar los diversos factores, se recomienda al Sr. Juan optar por Tienda 3 para vender sus productos. Las razones para esta recomendación son las siguientes:

Calificación Promedio Alta: La Tienda 3 tiene la calificación más alta entre las tiendas analizadas, lo que sugiere una mayor satisfacción de los clientes.

Bajo Costo de Envío: Ofrece el costo de envío más bajo, lo que puede ser atractivo para los clientes y puede facilitar la toma de decisiones de compra.

Productos más Vendidos: Aunque los productos más vendidos varían, Tienda 3 muestra una sólida demanda en su categoría principal, lo que podría indicar una mayor estabilidad en sus ventas.

En resumen, la Tienda 3 destaca en varios aspectos clave, lo que la convierte en la mejor opción para el Sr. Juan al momento de decidir dónde vender sus productos.
"""

import matplotlib.pyplot as plt
import numpy as np

# Datos hipotéticos
tiendas = ['Tienda 1', 'Tienda 2', 'Tienda 3', 'Tienda 4']
calificaciones = [4.2, 3.8, 4.5, 3.5]
costo_envio = [10, 12, 8, 15]
productos_vendidos = [100, 120, 150, 90]

# Crear figura y ejes
fig, ax1 = plt.subplots(figsize=(10, 6))

# Gráfico de barras para la Calificación Promedio
ax1.bar(tiendas, calificaciones, color='lightblue', label='Calificación Promedio', alpha=0.7, width=0.4, align='center')

# Añadir los valores sobre las barras de calificación
for i, v in enumerate(calificaciones):
    ax1.text(i, v + 0.05, f'{v}', ha='center', fontsize=12)

# Crear un segundo eje para el costo de envío y productos vendidos
ax2 = ax1.twinx()

# Gráfico de barras para el Costo de Envío Promedio
ax2.bar(tiendas, costo_envio, color='lightcoral', label='Costo de Envío Promedio', alpha=0.7, width=0.4, align='edge')

# Gráfico de barras para los Productos Más Vendidos
ax2.bar(tiendas, productos_vendidos, color='lightgreen', label='Productos Más Vendidos', alpha=0.7, width=0.4, align='edge')

# Añadir los valores sobre las barras de productos vendidos
for i, v in enumerate(productos_vendidos):
    ax2.text(i, v + 5, f'{v}', ha='center', fontsize=12)

# Añadir títulos y etiquetas
ax1.set_title('Comparación de Tiendas: Tienda 3 como la Mejor Opción', fontsize=16, fontweight='bold')
ax1.set_xlabel('Tiendas', fontsize=12, fontweight='bold')
ax1.set_ylabel('Calificación Promedio', fontsize=12, fontweight='bold')
ax2.set_ylabel('Costo de Envío / Productos Vendidos', fontsize=12, fontweight='bold')

# Añadir leyenda
ax1.legend(loc='upper left')
ax2.legend(loc='upper right')

# Mostrar la gráfica
plt.tight_layout()
plt.show()

"""Explicación del Gráfico:

Calificación Promedio: Se representa con barras azules, destacando la Tienda 3 con la calificación más alta.

Costo de Envío Promedio: Se representa con barras rojas, mostrando que la Tienda 3 tiene el costo de envío más bajo.

Productos Más Vendidos: Se representa con barras verdes, mostrando que Tienda 3 tiene una sólida demanda.

**Este gráfico ayudará a visualizar por qué Tienda 3 es la mejor opción para el Sr. Juan según el análisis realizado.**
"""

import matplotlib.pyplot as plt
import numpy as np

# Datos hipotéticos
tiendas = ['Tienda 1', 'Tienda 2', 'Tienda 3', 'Tienda 4']
calificaciones = [4.2, 3.8, 4.5, 3.5]
costo_envio = [10, 12, 8, 15]
productos_vendidos = [100, 120, 150, 90]

# Nombres de los productos más vendidos (hipotéticos)
productos_mas_vendidos = ['Laptop', 'Camiseta', 'Silla', 'Pelota']
productos_menos_vendidos = ['Auriculares', 'Zapatos', 'Mesa', 'Cuna']

# Crear figura y ejes
fig, ax1 = plt.subplots(figsize=(10, 6))

# Gráfico de barras para la Calificación Promedio
ax1.bar(tiendas, calificaciones, color='lightblue', label='Calificación Promedio', alpha=0.7, width=0.4, align='center')

# Añadir los valores sobre las barras de calificación
for i, v in enumerate(calificaciones):
    ax1.text(i, v + 0.05, f'{v}', ha='center', fontsize=12)

# Crear un segundo eje para el costo de envío y productos vendidos
ax2 = ax1.twinx()

# Gráfico de barras para el Costo de Envío Promedio
ax2.bar(tiendas, costo_envio, color='lightcoral', label='Costo de Envío Promedio', alpha=0.7, width=0.4, align='edge')

# Gráfico de barras para los Productos Más Vendidos
ax2.bar(tiendas, productos_vendidos, color='lightgreen', label='Productos Más Vendidos', alpha=0.7, width=0.4, align='edge')

# Añadir los valores sobre las barras de productos vendidos
for i, v in enumerate(productos_vendidos):
    ax2.text(i, v + 5, f'{v} ({productos_mas_vendidos[i]})', ha='center', fontsize=12)

# Añadir títulos y etiquetas
ax1.set_title('Comparación de Tiendas: Tienda 3 como la Mejor Opción', fontsize=16, fontweight='bold')
ax1.set_xlabel('Tiendas', fontsize=12, fontweight='bold')
ax1.set_ylabel('Calificación Promedio', fontsize=12, fontweight='bold')
ax2.set_ylabel('Costo de Envío / Productos Vendidos', fontsize=12, fontweight='bold')

# Añadir leyenda
ax1.legend(loc='upper left')
ax2.legend(loc='upper right')

# Mostrar la gráfica
plt.tight_layout()
plt.show()